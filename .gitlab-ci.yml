---
default:
  image: alpine:latest
  before_script: &default_before_script
    - apk -U upgrade

stages:
  - validate
  - release

lint:
  stage: validate
  before_script:
    - *default_before_script
    - apk add bash git go npm py-pip python3-dev shellcheck
    - pip install gitlint pre-commit yamllint
    - npm install -g markdownlint-cli
    - go install mvdan.cc/sh/v3/cmd/shfmt@latest
    - PATH="$PATH:/root/go/bin"
  script:
    - gitlint
    - tools/check-sanity
    - GITLAB_PRIVATE_TOKEN="$GL_TOKEN" pre-commit run --all-files
  interruptible: true
  rules:
    - when: always

test-full:
  stage: validate
  before_script:
    - *default_before_script
    - apk add bats
  script:
    - bats tests
    - echo "$0 ✓ Full test set"
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE != "schedule"

test-nightly:
  stage: validate
  before_script:
    - *default_before_script
    - apk add bats
  script:
    - bats tests
    - echo "$0 ✓ Nightly test set"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

release:
  stage: release
  image:
    name: node:alpine
    entrypoint: [""]
  before_script:
    - *default_before_script
    - apk add git
  script:
    - npm install -g semantic-release @semantic-release/gitlab @semantic-release/github @semantic-release/git @semantic-release/changelog
    - npx semantic-release
  rules:
    - if: $CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  resource_group: release
