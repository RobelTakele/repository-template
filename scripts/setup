#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'
LANG=C

# shellcheck source=./lib.sh
. "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")/lib.sh"

function setup() {
    REPO_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && git rev-parse --show-toplevel)"

    pushd "$REPO_DIR"

    # Install pre-commit hook if it's not present or doesn't point to the right location
    if [[ ! -L ".git/hooks/pre-commit" ]] || [ "$(readlink .git/hooks/pre-commit)" != "../../scripts/pre-commit" ]; then
        if ln -s ../../scripts/pre-commit .git/hooks/pre-commit; then
            out "pre-commit hook has been installed." "$symbol_inst"
        else
            err "pre-commit hook installation failed, cannot create symbolic link."
            exit 1
        fi
    else
        out "pre-commit hook is installed."
    fi

    # Install commit-msg hook if it's not present or doesn't point to the right location
    if [[ ! -L ".git/hooks/commit-msg" ]] || [ "$(readlink .git/hooks/commit-msg)" != "../../scripts/commit-msg" ]; then
        if ln -s ../../scripts/commit-msg .git/hooks/commit-msg; then
            out "commit-msg hook has been installed." "$symbol_inst"
        else
            err "commit-msg hook installation failed, cannot create symbolic link."
            exit 1
        fi
    else
        out "commit-msg hook is installed."
    fi

    # Install pre-push hook if it's not present or doesn't point to the right location
    if [[ ! -L ".git/hooks/pre-push" ]] || [ "$(readlink .git/hooks/pre-push)" != "../../scripts/pre-push" ]; then
        if ln -s ../../scripts/pre-push .git/hooks/pre-push; then
            out "pre-push hook has been installed." "$symbol_inst"
        else
            err "pre-push hook installation failed, cannot create symbolic link."
            exit 1
        fi
    else
        out "pre-push hook is installed."
    fi

    # Check if GL_TOKEN is set
    if [ -z "${GL_TOKEN:-}" ]; then
        out "environment variable GL_TOKEN is not set, gitlab-ci-linter will be skipped." "$symbol_warn"
        out "You might set up environment variable GL_TOKEN at scripts/secrets.sh and source it." "$symbol_tip"
    else
        out "GL_TOKEN is set."
    fi

    popd
}

# Main
function main() {
    if [[ "$EUID" -eq "0" ]]; then
        err "Superpowers might be more harmful than useful. Please run as a regular user."
        return "$status_err"
    fi
    scripts/bootstrap
    setup
}

# Skip functions execution under test
if [ -z "${TEST+x}" ]; then
    main
fi
